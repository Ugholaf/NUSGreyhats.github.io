[{"content":"Zoom Link: https://nus-sg.zoom.us/meeting/register/tZAsduygpjsvEtKjXX3Wdid5-jBLVkt1mRMw\nTalk: 7:00pm-7:45pm Title: Source Engine code auditing adventure\nDescription In this talk I will talk about the Source Engine, the leaked codebase and how I audited it to find vulnerabilities. This also acts as a case study on how real life code bases are audited.\nRequirements The participants should have basic knowledge on C/C++, basic knowledge on x86 memory exploitation techniques, and how exploit mitigations (NX, ASLR, Stack Canaries) work.\nSpeaker Bio I\u0026rsquo;m Bien Pham, an offensive security engineer from the Sea Security Team. I\u0026rsquo;m known for finding vulnerabilities in Valve Corporation\u0026rsquo;s games, for instance, the Counter-Strike series. I also play CTFs, mostly handling pwn challenges.\n Talk: 7:45pm-8:30pm Title: SecWed Mini CTF\nDescription To end off Security Wednesdays for this semester, We will be having a mini CTF session where the participants will get time to try out different challenges.\nNearer to the end of the session, we will be going through the answers for each of the CTF challenges.\n ","permalink":"https://nusgreyhats.org/posts/secweds/ay2122s1/sw0311/","summary":"Zoom Link: https://nus-sg.zoom.us/meeting/register/tZAsduygpjsvEtKjXX3Wdid5-jBLVkt1mRMw\nTalk: 7:00pm-7:45pm Title: Source Engine code auditing adventure\nDescription In this talk I will talk about the Source Engine, the leaked codebase and how I audited it to find vulnerabilities. This also acts as a case study on how real life code bases are audited.\nRequirements The participants should have basic knowledge on C/C++, basic knowledge on x86 memory exploitation techniques, and how exploit mitigations (NX, ASLR, Stack Canaries) work.","title":"SecWed #031121"},{"content":"During my internship, I reverse engineer macOS programs. So, I need a debugger.\nI am quite familiar with GDB, and there are nice extensions like GEF out there. However, Apple made it so difficult to compile a usable GDB on macOS\u0026hellip; 😑 We are pretty much forced to use LLDB (which I really don\u0026rsquo;t like).\nAnyways, beggars can\u0026rsquo;t be choosers, and vanilla GDB/LLDB is not really usable in the long run, so being able to use the scripting interface is very important. Similar to GDB, LLDB also has a Python scripting interface. Instead of .gdbinit, LLDB loads commands from .lldbinit during startup. There is a great lldbinit project that contains many custom commands which makes LLDB so much nicer to use, and I have a fork of it.\n(It is such a pain to even set breakpoints, vanilla LLDB is just not usable imo.)\nLLDB Architecture and Python Bindings Having the lldbinit extension is good. Being able to add my own custom commands is even better. To do so, I had to understand the architecture of the scripting interface.\nThe LLDB scripting interface is quite tidy. Everything is grouped into modules. Quoting the docs, here are less than half of the modules:\n SBAddress  A section + offset based address class.   SBBreakpoint  Represents a logical breakpoint and its associated settings.   SBBreakpointList  Proxy of C++ lldb::SBBreakpointList class   SBBreakpointLocation  Represents one unique instance (by address) of a logical breakpoint.   SBCommandInterpreter  SBCommandInterpreter handles/interprets commands for lldb.   SBCommandReturnObject  Represents a container which holds the result from command execution.    Feels like writing C++ but in Python. And the basic architecture is as follows:\nLLDB design: ------------| lldb -\u0026gt; debugger -\u0026gt; target -\u0026gt; process -\u0026gt; thread -\u0026gt; frame(s) -\u0026gt; thread -\u0026gt; frame(s)  LLDB talks to the debugger object debugger holds a target target holds a process process holds multiple threads and lastly, each thread has one or more frames  With more details (quoting the docs):\n SBTarget: Represents the target program running under the debugger.  Gives information about the executable, process, modules, memory, breakpoints, etc There\u0026rsquo;s a lot, check the docs   SBProcess: Represents the process associated with the target program.  Gives information about the process, memory Some overlap with the above, but this one doesn\u0026rsquo;t have modules nor breakpoints Check the docs   SBThread: Represents a thread of execution.  Gives information about a thread, e.g. thread ID Exposes functions for stepping (step in, step over, etc) and suspending/resuming Contains stack frame(s) (according to docs, it is possible to have more than 1, but I always see just 1) Check out the docs   SBFrame: Represents one of the stack frames associated with a thread.  Gives information about a stack frame, e.g. registers, functions, symbols, disassembly, etc This is a really useful module because of the information it gives. Check out the docs    Now, some useful functions to access the objects mentioned above (defined by lldbinit):\n SBTarget - get_target() SBProcess - get_process() SBThread - get_thread() SBFrame - get_frame()  Yea, quite easy.\nCreate Custom Commands To define a new command, it is as simple as creating a function in lldbinit.py. For example, to create a command called newcmd:\ndef cmd_newcmd(debugger, command, result, _dict): args = command.split(\u0026#39; \u0026#39;) if len(args) \u0026lt; 1: print(\u0026#39;newcmd \u0026lt;expression\u0026gt;\u0026#39;) return ... Then, the function must be registered as a command in the __lldb_init_module method:\ndef __lldb_init_module(debugger, internal_dict): ... ci.HandleCommand(\u0026#34;command script add -f lldbinit.cmd_newcmd newcmd\u0026#34;, res) ... The function name can be anything, but by convention all command functions in lldbinit go by cmd_\u0026lt;command name\u0026gt;.\nThe function arguments result and _dict might be useful but I don\u0026rsquo;t use them. debugger is the LLDB debugger object mentioned earlier, and command is the exact command string entered by the user.\nWe can use the API listed above to obtain information about the target/process/thread/frame, or perform actions such as setting breakpoints, stepping through instructions, etc.\nExample 1: Reading Memory Here\u0026rsquo;s a simple command I wrote to print unicode strings from memory (similar to x/s but printing unicode strings).\ndef cmd_xu(debugger, command, result, _dict): args = command.split(\u0026#39; \u0026#39;) if len(args) \u0026lt; 1: print(\u0026#39;xu \u0026lt;expression\u0026gt;\u0026#39;) return addr = int(get_frame().EvaluateExpression(args[0]).GetValue(), 10) error = lldb.SBError() ended = False s = u\u0026#39;\u0026#39; offset = 0 while not ended: mem = get_target().GetProcess().ReadMemory(addr + offset, 100, error) for i in range(0, 100, 2): wc = mem[i+1] \u0026lt;\u0026lt; 8 | mem[i] s += chr(wc) if wc == 0: ended = True break offset += 100 print(s) Example 2: Alias It is also possible to make aliases for long commands. For example, an alias for disabling breakpoints, through the SBCommandInterpreter object obtained via the debugger.GetCommandInterpreter() method.\n# disable breakpoint number def cmd_bpd(debugger, command, result, dict): res = lldb.SBCommandReturnObject() debugger.GetCommandInterpreter().HandleCommand(\u0026#34;breakpoint disable \u0026#34; + command, res) print(res.GetOutput()) Example 3: Function Tracing Lastly, here is an example of a more complicated command I wrote to get the list of functions called by the target. This is useful when I am attaching LLDB to Safari, and want to know the functions in a library that were called by Safari when loading a webpage.\nFor example, to see the functions in CoreGraphics called when browsing Wikipedia:\n(lldbinit) cz CoreGraphics [+] Creating breakpoints for all symbols in CoreGraphics [+] Done creating breakpoints for all symbols in CoreGraphics 0x7fff2505d324: | CoreGraphics CGColorSpaceUsesExtendedRange |__ WebKit WebKit::ShareableBitmap::calculateBytesPerRow(WebCore::IntSize, WebKit::ShareableBitmap::Configuration const\u0026amp;) 0x7fff2504a997: | CoreGraphics CGColorSpaceGetNumberOfComponents |__ QuartzCore CABackingStorePrepareUpdates_(CABackingStore*, unsigned long, unsigned long, unsigned int, unsigned int, unsigned int, unsigned long long, CA::GenericContext*, UpdateState*) 0x7fff250496fc: | CoreGraphics CGColorSpaceRetain |__ QuartzCore CA::CG::IOSurfaceDrawable::IOSurfaceDrawable(__IOSurface*, unsigned int, unsigned int, CGColorSpace*, int, int, unsigned int, unsigned int) 0x7fff2549cd24: | CoreGraphics CFRetain |__ CoreGraphics CGColorSpaceRetain 0x7fff2504971c: | CoreGraphics cs_retain_count |__ CoreFoundation _CFRetain 0x7fff2504e3d8: | CoreGraphics CGColorSpaceRelease |__ QuartzCore CABackingStorePrepareUpdates_(CABackingStore*, unsigned long, unsigned long, unsigned int, unsigned int, unsigned int, unsigned long long, CA::GenericContext*, UpdateState*) 0x7fff2505fdd1: | CoreGraphics CGSNewEmptyRegion |__ QuartzCore CABackingStorePrepareUpdates_(CABackingStore*, unsigned long, unsigned long, unsigned int, unsigned int, unsigned int, unsigned long long, CA::GenericContext*, UpdateState*) ... def cmd_cz(debugger, command, result, _dict): args = command.split(\u0026#39; \u0026#39;) if len(args) \u0026lt; 1: print(\u0026#39;cov \u0026lt;module name\u0026gt;\u0026#39;) return module_name = args[0] target = debugger.GetSelectedTarget() module = find_module_by_name(get_target(), module_name) # to keep track of the breakpoints set bpmap = {} print(\u0026#34;[+] Creating breakpoints for all symbols in\u0026#34;, module_name) for symbol in module: sym_name = symbol.GetName() if sym_name.startswith(\u0026#34;os\u0026#34;) or \u0026#34;pthread\u0026#34; in sym_name or \u0026#34;lock\u0026#34; in sym_name or \u0026#34;operator\u0026#34; in sym_name: continue address = symbol.GetStartAddress().GetLoadAddress(target) bp = target.BreakpointCreateByAddress(address) bpmap[address] = bp print(\u0026#34;[+] Done creating breakpoints for all symbols in\u0026#34;, module_name) visited = [] while True: get_process().Continue() thread = get_thread() rip = int(str(get_frame().reg[\u0026#34;rip\u0026#34;].value), 16) if rip in visited: continue if rip not in bpmap.keys(): print(\u0026#34;[+] Dead\u0026#34;) # crashed or something break # disable breakpoint after reaching it one time bpmap[rip].SetEnabled(False) print(hex(rip) + \u0026#34;:\u0026#34;) for i in range(2): frame = thread.GetFrameAtIndex(i) symbol = frame.GetSymbol() module = frame.GetModule().GetFileSpec().GetFilename() print(\u0026#34;|\u0026#34; + \u0026#34;__\u0026#34; * i, module, symbol.GetName()) In this example, I created a breakpoint using target.BreakpointCreateByAddress(address), by using the SBSymbol methods to get a function\u0026rsquo;s address in the process. I also used the lldbinit helper function find_module_by_name to get a SBModule object given a module name.\nThere were more unmentioned API calls used by this command, read the code to learn more if you are interested.\nThat\u0026rsquo;s all. Hope you find this useful :D\nReferences:\n LLDB docs lldbinit  fork of peter\u0026rsquo;s  fork of gdbinit\u0026rsquo;s  fork of deroko\u0026rsquo;s        ","permalink":"https://nusgreyhats.org/posts/writeups/basic-lldb-scripting/","summary":"During my internship, I reverse engineer macOS programs. So, I need a debugger.\nI am quite familiar with GDB, and there are nice extensions like GEF out there. However, Apple made it so difficult to compile a usable GDB on macOS\u0026hellip; 😑 We are pretty much forced to use LLDB (which I really don\u0026rsquo;t like).\nAnyways, beggars can\u0026rsquo;t be choosers, and vanilla GDB/LLDB is not really usable in the long run, so being able to use the scripting interface is very important.","title":"Basic LLDB Scripting"},{"content":"Zoom Link: https://nus-sg.zoom.us/meeting/register/tZIqd-qhrzopH90kFVsa1_98fY1Yq9r-VetY\nTalk: 7:00pm-7:45pm Title: My OSCP Journey\nDescription OSCP (Offensive Security Certified Professional) is an entry-level certification by Offensive Security that recognizes a person\u0026rsquo;s skills in penetration testing techniques and methodologies. In this talk, Jia Le will be sharing his experience in tackling this notoriously difficult and hands-on certification.\nRead more about the certification here: https://www.offensive-security.com/pwk-oscp/\nSpeaker Bio Tan Jia Le is a Year 2 Information Security student at the National University of Singapore (NUS) and a member of NUS Greyhats. He has a keen passion for penetration testing and had obtained the Offensive Security Certified Professional (OSCP) certification earlier this year. During his free time, he enjoys following security trends on Twitter and reading about security research findings. He also participates in Capture-The-Flag (CTF) competitions and focuses towards web challenges.\n   Talk: 7:45pm-8:30pm Title: So you want to be a Malware Reverse Engineer (RE) ?\nA sharing of tips/lessons gathered from a 5 year old malware RE.\nSlides here\nDescription Do you know what to do when you receive a piece of binary? How can you tell if it\u0026rsquo;s malicious? What are the steps taken to analyze this binary? What are the tools and techniques you can apply to examine this binary? What pitfalls to avoid and overcome with some of these static and dynamic analysis tools? How do you go about extracting the IOCs(Indicators of compromise) from the binary? Many tools can be utilized to dissect malware, but do you know which is the most important and how to take care of it.\nThe talk will focus on Windows PE but the techniques could also be applied to other file formats. There won\u0026rsquo;t be anything that is tied to a particular malware family but the content of the talk is gathered from the lessons learned while \u0026lsquo;dancing\u0026rsquo; with malware samples.\nSpeaker Bio Mark is a malware reverse engineer since 2017. His job requires him to comb through tens of binaries every week. He focuses on taking apart malware to determine its evasion techniques and IOCs. He has to analyze binaries of multiple formats e.g. PE, ELF, Mach-O, doc, pdf.\nTo him, every piece of binary has a story waiting for a malware reverse engineer to tell it.\n ","permalink":"https://nusgreyhats.org/posts/secweds/ay2122s1/sw2710/","summary":"Zoom Link: https://nus-sg.zoom.us/meeting/register/tZIqd-qhrzopH90kFVsa1_98fY1Yq9r-VetY\nTalk: 7:00pm-7:45pm Title: My OSCP Journey\nDescription OSCP (Offensive Security Certified Professional) is an entry-level certification by Offensive Security that recognizes a person\u0026rsquo;s skills in penetration testing techniques and methodologies. In this talk, Jia Le will be sharing his experience in tackling this notoriously difficult and hands-on certification.\nRead more about the certification here: https://www.offensive-security.com/pwk-oscp/\nSpeaker Bio Tan Jia Le is a Year 2 Information Security student at the National University of Singapore (NUS) and a member of NUS Greyhats.","title":"SecWed #271021"},{"content":"   Talk 1: 7 PM to 7:35 PM Title: Cryptography - Diophantine equation\nDescription Diophantine equation is an equation where only the integer solutions matter. This has shown up in various cryptographical schemes like RSA, Diffie Hellman Key Exchange, and Elliptic Curve Cryptography. In this talk, Kel Zin will analyze some interesting CTF problems related to diophantine equation.\nSpeaker Kel Zin is a Year 2 NUS Computer Science student and a member of Greyhats. He likes Crypto.\n Talk 2: 7:35 PM to 8 PM Title: A practical approach to Image Forensics\nDescription As the famous adage goes, \u0026ldquo;A picture is worth a thousand words\u0026rdquo;. Images are commonly used in the internet we consume everyday, from social media to work. In this talk, we explore examining what an image is and how forensics \u0026amp; security could apply.\nBio Chan Jian Hao is an Information Security student at the National University of Singapore (NUS) and a member of NUS Greyhats. He enjoys fiddling with malwares and the forensics analysis of them, while at times pwning machines for penetration testing. During his free time, he spends it mindlessly playing computer games trying to escape from elohell.\n Talk 3: 8 PM to 8:15 PM Title: Hoodwinked\nDescription Steganography is the art of misdirection. The main idea is to trick a suspecting observer into thinking that nothing is there, when everything is present in plain sight. In this talk, Nigel will cover: (1) what steganography is, (2) LSB-steganography and (3) its applications in digital watermarking.\nBio Nigel enjoys algorithmic problems and composing music, though he is not blessed enough to be good at either. Pre-covid, he would sometimes be spotted at the pool.\n Talk 4: 8:15 PM to 8:30 PM Title: An introduction to XXE attacks\nDescription As web applications become increasingly prevalent in this day and age, the potential for attackers to exploit web-based vulnerabilities in these applications becomes increasingly greater. In this talk, Brandon will touch on on XML External Entity (XXE) Attacks, a particular form of web-based attacks that is less well-known.\nBio Brandon is an Information Security student and a member of Greyhats. He enjoys working with web-based applications as well as learning about various web exploitation techniques.\n","permalink":"https://nusgreyhats.org/posts/secweds/ay2122s1/sw2010/","summary":"Talk 1: 7 PM to 7:35 PM Title: Cryptography - Diophantine equation\nDescription Diophantine equation is an equation where only the integer solutions matter. This has shown up in various cryptographical schemes like RSA, Diffie Hellman Key Exchange, and Elliptic Curve Cryptography. In this talk, Kel Zin will analyze some interesting CTF problems related to diophantine equation.\nSpeaker Kel Zin is a Year 2 NUS Computer Science student and a member of Greyhats.","title":"SecWed #201021"},{"content":"   Talk 1: 7:00pm-7:45pm Title: A Guide on Antivirus Evasion\nDownload Slides\nDescription Antivirus evasion is crucial in many cybersecurity research and operations. For example, red team exercises are often conducted in a hardened production environment. While open-source tools may help in the enumeration or exploitations of services, they are often detected and flagged by antivirus.\nIn this talk, we will look into manual and partially automated ways to achieve antivirus evasion. In addition, we will explore two case studies on evading detection of popular hacking tools - SharpHound and mimikatz.\nSpeaker Bio Glenice graduated from NUS Information Security in 2020 and is an alumnus of NUS Greyhats. She is currently working as an associate cybersecurity specialist at Government Technology Agency. Her work focuses on web security, cloud technology, and social engineering practices.\n Talk 2: 7:45pm-8:30pm Title: Dirty Deeds Done Dirt Cheap\nDescription What are real world bugs made of? A miserable pile of secrets. This talk is not about cool exploit techniques, nor is it about the latest bypass using complex machinery. In this talk, I present some of the cheapest no-brainer techniques that have been used to find security bugs that you as a security professional should know. We will uncover some of the dirtiest tricks people use to write software and how to break it. You won\u0026rsquo;t like what you see, but don\u0026rsquo;t hate the player, hate the game.\nSpeaker Bio Wai Tuck is a PhD student at SMU, focusing on the intersection between security and machine learning. He graduated from Carnegie Mellon University with a Masters in Information Security, where he actively participated in CTFs and worked on research in dynamic analysis of Javascript code. He also previously contributed to nmap, creating the first reliable scanning script for SambaCry. He is OSCP, OSCE, OSWP, and OSWE certified.\n ","permalink":"https://nusgreyhats.org/posts/secweds/ay2122s1/sw1310/","summary":"Talk 1: 7:00pm-7:45pm Title: A Guide on Antivirus Evasion\nDownload Slides\nDescription Antivirus evasion is crucial in many cybersecurity research and operations. For example, red team exercises are often conducted in a hardened production environment. While open-source tools may help in the enumeration or exploitations of services, they are often detected and flagged by antivirus.\nIn this talk, we will look into manual and partially automated ways to achieve antivirus evasion.","title":"SecWed #131021"},{"content":"Talk: 7:00pm-8:30pm The presentation will introduce what a Security Operations Center (SOC) is, its typical mission and responsibilities, and the different roles that make up a SOC. The speakers will talk about the various components of a SOC and how they help one another effectively detect security threats.\nThey will also discuss security incidents and how we respond to them. Finally, they will conclude the presentation with a show and tell how they can acquire an infected or compromised machine and what forensic artifacts they can uncover for our investigations.\nSpeakers Dr. Choo Fai Cheong is a senior manager at UKG. He is a founding member of UKG’s APAC Security Operations Center, where he has helped build the UKG\u0026rsquo;s SOC in Singapore. Dr. Choo is responsible for the day-to-day security operations and leads the team on threat hunting, detection development, and incident response. Before joining UKG, he was a senior consultant at Mandiant, where he handled cyber security incidents and performed forensic analysis.\nIan Starr Esguerra is a Senior Security Analyst at UKG. He has recently joined UKG’s APAC Security Operations Center, where he is part of the team that ensures the company’s security by analyzing security events, conducting incident response and investigations. Before joining UKG, he was an Incident Response Analyst at Barclays, where he performed a similar role. He was also a Malware Analyst at different AntiVirus companies, where he did the analysis, detection, and reverse engineering of prevalent malware.\n","permalink":"https://nusgreyhats.org/posts/secweds/ay2122s1/sw0610/","summary":"Talk: 7:00pm-8:30pm The presentation will introduce what a Security Operations Center (SOC) is, its typical mission and responsibilities, and the different roles that make up a SOC. The speakers will talk about the various components of a SOC and how they help one another effectively detect security threats.\nThey will also discuss security incidents and how we respond to them. Finally, they will conclude the presentation with a show and tell how they can acquire an infected or compromised machine and what forensic artifacts they can uncover for our investigations.","title":"SecWed #061021"},{"content":"We are back with a brand new site!\n","permalink":"https://nusgreyhats.org/posts/new-site/","summary":"We are back with a brand new site!","title":"New Website"},{"content":"   Talk 1: 1900Hrs - 1945Hrs Talk Title: Unusual Applications of OpenAI in Cybersecurity\nOne of the most prominent examples of AI-generated synthetic media’s impact on cybersecurity is in the field of social engineering and information operations. However, AI language models can still pop up in interesting places. Could we use OpenAI to convert assembly to pseudocode while reverse-engineering binaries? How about locating vulnerabilities in code? Let’s dive down the rabbit hole of OpenAI’s API, covering the latest advanced features such as fine-tunes, searches, and classifications.\nPre-talk Preparations You may wish to read the AI Phishing Whitepaper published by Black Hat USA or watch the AI Phishing DEF CON talk.\nSpeaker Eugene hacks for good! From Amazon to Zendesk , he has helped secure products from a range of vulnerabilities. At the Government Technology Agency of Singapore (GovTech), he protects citizen data through offensive security research and penetration testing.\nWhile he focuses on application security and vulnerability research, he is also involved in a variety of domains such as artificial intelligence and social engineering. Prior to GovTech, he contributed to cyber defense projects with the Singapore Armed Forces and was awarded the Most Valuable Hacker title at HackerOne\u0026rsquo;s H1-213 live hacking event for the US Air Force, UK Ministry of Defense, and Verizon Media.\nHis work has been featured at top conferences such as Black Hat and DEF CON as well as industry publications like WIRED and The Daily Swig. He writes at https://spaceraccoon.dev/, where he shares tips and tricks from his white hat hacking journey, including zero-days in core npm packages (CVE-2020–7788) and office applications (CVE-2021-33035). He looks forward to growing and learning in the exciting world of cybersecurity.\n Talk 2: 1945Hrs - 2030Hrs Talk Title: How to get into CTFs\nCTF (Capture the Flag) competitions are contests of skills with the aim of defeating security to get access to the \u0026lsquo;flag\u0026rsquo; - a token that can be exchanged for points. CTFs are becoming more popular in Singapore with increased funding from the government, and due to more lucrative prize rewards. 1st Place prize has increased from $2,000 to $5,000 for CrossCTF, and DSO-NUS CTF 1st Place being $10,000, for example.\nSo, how does one participate in such competitions, and how does one win one? In this talk, we will go through the acquiring of skills, the mindset, and tactics necessary to win.\nSpeaker Akash is a Computer Science Student studying at NUS and a Member of Greyhats. He has participated in many CTF challenges and has a great amount of experience up his sleeve. He mainly focuses on Reverse Engineering and Pwn.\n","permalink":"https://nusgreyhats.org/posts/secweds/ay2122s1/sw1509/","summary":"Talk 1: 1900Hrs - 1945Hrs Talk Title: Unusual Applications of OpenAI in Cybersecurity\nOne of the most prominent examples of AI-generated synthetic media’s impact on cybersecurity is in the field of social engineering and information operations. However, AI language models can still pop up in interesting places. Could we use OpenAI to convert assembly to pseudocode while reverse-engineering binaries? How about locating vulnerabilities in code? Let’s dive down the rabbit hole of OpenAI’s API, covering the latest advanced features such as fine-tunes, searches, and classifications.","title":"SecWed #150921"},{"content":"   Talk 1: 1900HRs - 1945HRs Title: Identifying Bugs in Router Firmware at Scale with Taint Analysis\nDescription Taint analysis is a very useful technique in reverse engineering and bug hunting. For some common vulnerability classes such as command injection or buffer overflow, it can be tedious for a researcher to find them through manual reverse engineering. In this talk, Daniel will share about a tool that he helped develop during his internship, which uses taint analysis techniques to automate the process of finding such bugs in router firmware.\nBio Daniel is a Year 3 Computer Engineering student in NUS. He is currently an intern at STARLabs, to fulfil his Industrial Attachment programme requirement by the Faculty of Engineering. He is also a member of the Greyhats core team.\n Talk 2: 1945HRs - 2030HRs Title: The Spectre of Ransomware and the Criminal Underground\nDescription The Criminal Underground today is a vibrant ecosystem, with many Criminal Enterprises existing to support Big Game Hunting (BGH) Ransomware Operations.\nNotable to the past year is the emergence of Access Brokers supporting a variety of Criminal Adversaries, including the most prolific Ransomware Operators, with initial access into their target environments.Also, a number of dramatic shifts have been observed in the BGH space, including the exponential surge in the adoption of the Extortion and Data Leaks tactics and the rise of Ransomware-as-a-Service.\nThis talk strives to take a deep dive into these recent threat trends and offer the audience with useful insights to better defend your organisation against the spectre of Ransomware and eCrime.\nBio Aaron serves as a Strategic Threat Advisor at Crowdstrike. He is responsible for CrowdStrike’s Threat Intelligence business across Asia-Pacific (APAC). Prior to his current role, Aaron was an Intelligence Consultant at Recorded Future. He was responsible for the design and implementation of threat Intelligence strategies for Commercial and Government Accounts across APAC.\nAaron got his start in Security and Threat Intelligence in the Singapore Armed Forces as a Military Intelligence Officer. He concluded 12 years of Active Duty in 2019 and has served in multiple Command Appointments in classified Intelligence Units, and garnered Staff experience in the areas of Strategic Planning and Policy Development. In his penultimate tour of duty, Aaron was instrumental in establishing the Defence Cyber Organisation (DCO), which is akin to Singapore’s Cyber Command.\n","permalink":"https://nusgreyhats.org/posts/secweds/ay2122s1/sw0809/","summary":"Talk 1: 1900HRs - 1945HRs Title: Identifying Bugs in Router Firmware at Scale with Taint Analysis\nDescription Taint analysis is a very useful technique in reverse engineering and bug hunting. For some common vulnerability classes such as command injection or buffer overflow, it can be tedious for a researcher to find them through manual reverse engineering. In this talk, Daniel will share about a tool that he helped develop during his internship, which uses taint analysis techniques to automate the process of finding such bugs in router firmware.","title":"SecWed #080921"},{"content":"   Talk 1: 1900Hrs - 1945Hrs Talk Title: Cyber Risk Quantification: Let\u0026rsquo;s talk cyber risk\nCybersecurity have been growing in importance and frequently play a key role in organisations in this day and age. With the recent growth of cyber threats and implementation of new cybersecurity laws, the possibility and consequences of exploited cyber risks have increased exponentially as well. As cybersecurity specialists, how can we translate such costs and the benefits of new security controls into something that can be universally understood across the organisation? In this talk, Debbie will be giving a brief introduction into quantifying cyber risks and discuss how we, as cybersecurity specialists, can help our organisations make smarter cybersecurity investments.\nSpeaker Debbie is a final year undergraduate student at NUS, majoring in Information Security. She previously graduated from Nanyang Polytechnic with a Diploma in Cyber Security and Forensics. As part of her roles as CISO summer intern at UBS, Debbie contributed to a white paper on Cyber Risk Quantification.\n Talk 2: 1945Hrs - 2030Hrs Talk Title: Static code analysis with Semgrep\nStatic code analysis is a powerful tool in finding bugs in code. In this talk, we will show off the power of Semgrep, an open source static analysis tools, in matching complicated code patterns. The talk will demonstrate the power of the hundreds of community contributed Semgrep rules, provide a brief tutorial on writing custom Semgrep rules tailored to a code base, and discuss the various use cases where Semgrep can make a difference.\nSpeaker Terry is a security consultant at Centurion Information Security. He enjoys reverse engineering and fuzzing applications in his spare time.\n","permalink":"https://nusgreyhats.org/posts/secweds/ay2122s1/sw0109/","summary":"Talk 1: 1900Hrs - 1945Hrs Talk Title: Cyber Risk Quantification: Let\u0026rsquo;s talk cyber risk\nCybersecurity have been growing in importance and frequently play a key role in organisations in this day and age. With the recent growth of cyber threats and implementation of new cybersecurity laws, the possibility and consequences of exploited cyber risks have increased exponentially as well. As cybersecurity specialists, how can we translate such costs and the benefits of new security controls into something that can be universally understood across the organisation?","title":"SecWed #010921"},{"content":"Talk: 1900Hrs - 2030Hrs Talk Title: Cyber threat intelligence: Winning the war on cybercrime\nIn this session, Lionel Bruchez from the UBS AG Chief Information Security Office will introduce the latest cybercrime trends and how threat intelligence enables the organization to remain ahead of the game.\nBeyond traditional cyber defence, Lionel will also pave the way towards leveraging cyber intelligence to proactively identify market landscape, risks and investment opportunities to support firms’ revenue generation and growth opportunities.\nSpeaker Lionel Bruchez is the COO of the UBS Intelligence Center and deputy APAC Chief Information Security Officer (CISO). In his roles, Lionel focuses on generating a business context for cyber defence activities and providing strategic and tactical awareness to key decision-makers across the firm. Lionel currently oversees the development of the UBS CISO Market Insights and Business Advisory service with a key focus on leveraging cybersecurity to enable a competitive advantage for organizations and institutions. Lionel comes from an academic background in ETH Zürich and EPF Lausanne, where he specialized in Quantum Cryptography, probabilistic machine learning, and research on next-generation Internet architectures.\n ","permalink":"https://nusgreyhats.org/posts/secweds/ay2122s1/sw2508/","summary":"Talk: 1900Hrs - 2030Hrs Talk Title: Cyber threat intelligence: Winning the war on cybercrime\nIn this session, Lionel Bruchez from the UBS AG Chief Information Security Office will introduce the latest cybercrime trends and how threat intelligence enables the organization to remain ahead of the game.\nBeyond traditional cyber defence, Lionel will also pave the way towards leveraging cyber intelligence to proactively identify market landscape, risks and investment opportunities to support firms’ revenue generation and growth opportunities.","title":"SecWed #250821"},{"content":"Talk 1: 1900HRs - 1945HRs Title: Defending Singapore’s Digital Borders\nDescription Cyberspace will be increasingly central to maintaining Singapore’s economic success and geopolitical relevance. As one of the most connected countries globally, Singapore’s connectivity and digitalisation will only continue to intensify under our Smart Nation initiative. At the same time, cyber threats continue to proliferate. We see a variety of cyber threats from terrorists, criminal, and state-sponsored organisations, especially as Covid-19 has forced many of us to work, learn, and play from home, on our mobile and electronic devices.\nMINDEF/SAF is responsible for enhancing Singapore’s security and sovereignty, no matter where the threats come from. Join us to find out more!\nBio COL Justiin Ang, is Head, Cyber Strategy and Policy Department, of the Defence Cyber Organisation. COL Ang serves as the principal advisor to the Defence Cyber Chief for all matters pertaining to development and implementation of cyber strategies and plans. Prior to this, COL Justiin Ang held the appointment of Director (Strategic Policy, Policy-Operations and Futures) in the Defence Policy Office, where he oversaw the development of strategies to guide MINDEF’s defence relations, as well as policy matters pertaining to the SAF’s operations. COL Justiin Ang joined the Defence Cyber Organisation in 2020 after graduating from Carnegie Mellon University with a Masters in Science in Information Security. An Army infantry officer by vocation, he has experience in policy, operations, and talent management, having served with MINDEF/SAF for more than 20 years.\n Talk 2: 1945HRs - 2030HRs Title: Adversarial Attack on Machine Learning Models\nDescription Machine learning models, especially deep neural networks, have achieved excellent performance in tasks such as image classification, object detection and natural language processing. Nonetheless, most machine learning models are vulnerable towards attacks using adversarial samples. A smallest perturbation on the input, such as change of a pixel’s value, could cause the model to give the wrong result. In this talk, I will give a brief introduction about some of the adversarial attacks and discuss what we can do to mitigate them.\nBio Jiyi graduated from NUS School of Computing in 2018 with first class honors. Currently, he is a part-time PhD student in NUS, working with Prof. Chang Ee-Chien on topics in machine learning security. He is also working as a research scientist in PayPal.\n ","permalink":"https://nusgreyhats.org/posts/secweds/ay2122s1/sw1808/","summary":"Talk 1: 1900HRs - 1945HRs Title: Defending Singapore’s Digital Borders\nDescription Cyberspace will be increasingly central to maintaining Singapore’s economic success and geopolitical relevance. As one of the most connected countries globally, Singapore’s connectivity and digitalisation will only continue to intensify under our Smart Nation initiative. At the same time, cyber threats continue to proliferate. We see a variety of cyber threats from terrorists, criminal, and state-sponsored organisations, especially as Covid-19 has forced many of us to work, learn, and play from home, on our mobile and electronic devices.","title":"SecWed #180821"},{"content":"   Talk 1: 1900Hrs - 1945Hrs Talk Title: Greyhats Introduction\nDo you find yourself wondering what the Greyhats team is often up to? Want to get to know more about the information security industry? Want to further hone your information security skills? 🖥 🚀\nLearn more about NUS' first and only information security interest group and the various activities that we embark on together! Join us at our welcome tea on 11 August 2021 from 7pm to 8.30pm, and get to know some of us and our team\u0026rsquo;s work first hand! 👨‍💻👨‍💻👨‍💻👨‍💻\nSpeaker NUS GreyHats is a special interest group designed to spark students' interest in information security and advance the level of security proficiency towards the aim of contributing to the growing need for cyber defenders in the government and private sectors.\n Talk 2: 1945Hrs - 2030Hrs Talk Title: Enigma and Bombe: how they encrypt and how they decipher in WWII\nMost cybersecurity professionals probably are aware of the significant role of codebreakers in WWII, in particular the encryption device Enigma and the code-breaker Bombe that often appeared in popular media. So, what about the technical details? In this talk, I will describe the details of Enigma \u0026amp; Bombe, up to the point that we could simulate them. While the experiences on both machines likely shaped development of modern cryptography, we probably won’t need such electro-mechanical system anymore. Nonetheless, it would be a fun topic to kickstart this seminar series.\nSpeaker Ee-Chien Chang is an Associate Professor in the School of Computing at National University of Singapore (NUS). He received his PhD in Computer Science from New York University and was a postdoctoral fellow with DIMACS in Rutgers University and NEC Labs America. His research focuses on cybersecurity security and is particularly intrigued by cross-domain problems. His earlier works include multimedia security, such as image forensic, image watermarking and biometric cryptography, which is in the intersection of multimedia and applied cryptography. More recently, he has been investigating issues on security of machine learning under adversarial environment, and application of the hardware-based Trusted Execution Environment in the cloud. He has published in reputable conferences and journals. He is a lead-PI of National Cybersecurity R\u0026amp;D Laboratory (NCL), NUS, and deputy director of the Centre for Technology, Robotics, Artificial Intelligence \u0026amp; the Law (TRAIL), NUS.\n","permalink":"https://nusgreyhats.org/posts/secweds/ay2122s1/sw1108/","summary":"Talk 1: 1900Hrs - 1945Hrs Talk Title: Greyhats Introduction\nDo you find yourself wondering what the Greyhats team is often up to? Want to get to know more about the information security industry? Want to further hone your information security skills? 🖥 🚀\nLearn more about NUS' first and only information security interest group and the various activities that we embark on together! Join us at our welcome tea on 11 August 2021 from 7pm to 8.","title":"SecWed #110821"},{"content":"","permalink":"https://nusgreyhats.org/resources/","summary":"resources","title":"Resources"},{"content":"","permalink":"https://nusgreyhats.org/secweds/","summary":"secweds","title":"Security Wednesdays"},{"content":"","permalink":"https://nusgreyhats.org/team/","summary":"team","title":"The Team"}]